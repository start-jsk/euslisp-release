;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-picaladder-object
  :super cascaded-link
  :slots (sensors
         ))
(defmethod room73b2-picaladder-object
  (:init
   (&rest args &key (name "room73b2-picaladder") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -135.0 165.0 840.0) (float-vector -135.0 165.0 860.0) (float-vector 135.0 165.0 860.0) (float-vector 135.0 165.0 840.0)))
         (instance face :init :vertices (list (float-vector -135.0 -165.0 860.0) (float-vector -135.0 -165.0 840.0) (float-vector 135.0 -165.0 840.0) (float-vector 135.0 -165.0 860.0)))
         (instance face :init :vertices (list (float-vector -135.0 165.0 840.0) (float-vector -135.0 -165.0 840.0) (float-vector -135.0 -165.0 860.0) (float-vector -135.0 165.0 860.0)))
         (instance face :init :vertices (list (float-vector 135.0 165.0 840.0) (float-vector 135.0 -165.0 840.0) (float-vector -135.0 -165.0 840.0) (float-vector -135.0 165.0 840.0)))
         (instance face :init :vertices (list (float-vector 135.0 165.0 860.0) (float-vector 135.0 -165.0 860.0) (float-vector 135.0 -165.0 840.0) (float-vector 135.0 165.0 840.0)))
         (instance face :init :vertices (list (float-vector -135.0 165.0 860.0) (float-vector -135.0 -165.0 860.0) (float-vector 135.0 -165.0 860.0) (float-vector 135.0 165.0 860.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 410.0 -235.0 10.0) (float-vector 410.0 -215.0 10.0) (float-vector 440.0 -215.0 10.0) (float-vector 440.0 -235.0 10.0)))
         (instance face :init :vertices (list (float-vector 120.0 -155.0 860.0) (float-vector 120.0 -175.0 860.0) (float-vector 150.0 -175.0 860.0) (float-vector 150.0 -155.0 860.0)))
         (instance face :init :vertices (list (float-vector 410.0 -235.0 10.0) (float-vector 120.0 -175.0 860.0) (float-vector 120.0 -155.0 860.0) (float-vector 410.0 -215.0 10.0)))
         (instance face :init :vertices (list (float-vector 440.0 -235.0 10.0) (float-vector 150.0 -175.0 860.0) (float-vector 120.0 -175.0 860.0) (float-vector 410.0 -235.0 10.0)))
         (instance face :init :vertices (list (float-vector 440.0 -215.0 10.0) (float-vector 150.0 -155.0 860.0) (float-vector 150.0 -175.0 860.0) (float-vector 440.0 -235.0 10.0)))
         (instance face :init :vertices (list (float-vector 410.0 -215.0 10.0) (float-vector 120.0 -155.0 860.0) (float-vector 150.0 -155.0 860.0) (float-vector 440.0 -215.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 410.0 215.0 10.0) (float-vector 410.0 235.0 10.0) (float-vector 440.0 235.0 10.0) (float-vector 440.0 215.0 10.0)))
         (instance face :init :vertices (list (float-vector 120.0 175.0 860.0) (float-vector 120.0 155.0 860.0) (float-vector 150.0 155.0 860.0) (float-vector 150.0 175.0 860.0)))
         (instance face :init :vertices (list (float-vector 410.0 215.0 10.0) (float-vector 120.0 155.0 860.0) (float-vector 120.0 175.0 860.0) (float-vector 410.0 235.0 10.0)))
         (instance face :init :vertices (list (float-vector 440.0 215.0 10.0) (float-vector 150.0 155.0 860.0) (float-vector 120.0 155.0 860.0) (float-vector 410.0 215.0 10.0)))
         (instance face :init :vertices (list (float-vector 440.0 235.0 10.0) (float-vector 150.0 175.0 860.0) (float-vector 150.0 155.0 860.0) (float-vector 440.0 215.0 10.0)))
         (instance face :init :vertices (list (float-vector 410.0 235.0 10.0) (float-vector 120.0 175.0 860.0) (float-vector 150.0 175.0 860.0) (float-vector 440.0 235.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 323.353 210.0 220.0) (float-vector 383.353 210.0 220.0) (float-vector 384.353 210.0 201.0) (float-vector 333.353 210.0 184.0)))
         (instance face :init :vertices (list (float-vector 383.353 -210.0 220.0) (float-vector 323.353 -210.0 220.0) (float-vector 333.353 -210.0 184.0) (float-vector 384.353 -210.0 201.0)))
         (instance face :init :vertices (list (float-vector 323.353 210.0 220.0) (float-vector 323.353 -210.0 220.0) (float-vector 383.353 -210.0 220.0) (float-vector 383.353 210.0 220.0)))
         (instance face :init :vertices (list (float-vector 333.353 210.0 184.0) (float-vector 333.353 -210.0 184.0) (float-vector 323.353 -210.0 220.0) (float-vector 323.353 210.0 220.0)))
         (instance face :init :vertices (list (float-vector 384.353 210.0 201.0) (float-vector 384.353 -210.0 201.0) (float-vector 333.353 -210.0 184.0) (float-vector 333.353 210.0 184.0)))
         (instance face :init :vertices (list (float-vector 383.353 210.0 220.0) (float-vector 383.353 -210.0 220.0) (float-vector 384.353 -210.0 201.0) (float-vector 384.353 210.0 201.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 251.706 195.0 430.0) (float-vector 311.706 195.0 430.0) (float-vector 312.706 195.0 411.0) (float-vector 261.706 195.0 394.0)))
         (instance face :init :vertices (list (float-vector 311.706 -195.0 430.0) (float-vector 251.706 -195.0 430.0) (float-vector 261.706 -195.0 394.0) (float-vector 312.706 -195.0 411.0)))
         (instance face :init :vertices (list (float-vector 251.706 195.0 430.0) (float-vector 251.706 -195.0 430.0) (float-vector 311.706 -195.0 430.0) (float-vector 311.706 195.0 430.0)))
         (instance face :init :vertices (list (float-vector 261.706 195.0 394.0) (float-vector 261.706 -195.0 394.0) (float-vector 251.706 -195.0 430.0) (float-vector 251.706 195.0 430.0)))
         (instance face :init :vertices (list (float-vector 312.706 195.0 411.0) (float-vector 312.706 -195.0 411.0) (float-vector 261.706 -195.0 394.0) (float-vector 261.706 195.0 394.0)))
         (instance face :init :vertices (list (float-vector 311.706 195.0 430.0) (float-vector 311.706 -195.0 430.0) (float-vector 312.706 -195.0 411.0) (float-vector 312.706 195.0 411.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 180.059 180.0 640.0) (float-vector 240.059 180.0 640.0) (float-vector 241.059 180.0 621.0) (float-vector 190.059 180.0 604.0)))
         (instance face :init :vertices (list (float-vector 240.059 -180.0 640.0) (float-vector 180.059 -180.0 640.0) (float-vector 190.059 -180.0 604.0) (float-vector 241.059 -180.0 621.0)))
         (instance face :init :vertices (list (float-vector 180.059 180.0 640.0) (float-vector 180.059 -180.0 640.0) (float-vector 240.059 -180.0 640.0) (float-vector 240.059 180.0 640.0)))
         (instance face :init :vertices (list (float-vector 190.059 180.0 604.0) (float-vector 190.059 -180.0 604.0) (float-vector 180.059 -180.0 640.0) (float-vector 180.059 180.0 640.0)))
         (instance face :init :vertices (list (float-vector 241.059 180.0 621.0) (float-vector 241.059 -180.0 621.0) (float-vector 190.059 -180.0 604.0) (float-vector 190.059 180.0 604.0)))
         (instance face :init :vertices (list (float-vector 240.059 180.0 640.0) (float-vector 240.059 -180.0 640.0) (float-vector 241.059 -180.0 621.0) (float-vector 241.059 180.0 621.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 105.0 165.0 860.0) (float-vector 165.0 165.0 860.0) (float-vector 166.0 165.0 841.0) (float-vector 115.0 165.0 824.0)))
         (instance face :init :vertices (list (float-vector 165.0 -165.0 860.0) (float-vector 105.0 -165.0 860.0) (float-vector 115.0 -165.0 824.0) (float-vector 166.0 -165.0 841.0)))
         (instance face :init :vertices (list (float-vector 105.0 165.0 860.0) (float-vector 105.0 -165.0 860.0) (float-vector 165.0 -165.0 860.0) (float-vector 165.0 165.0 860.0)))
         (instance face :init :vertices (list (float-vector 115.0 165.0 824.0) (float-vector 115.0 -165.0 824.0) (float-vector 105.0 -165.0 860.0) (float-vector 105.0 165.0 860.0)))
         (instance face :init :vertices (list (float-vector 166.0 165.0 841.0) (float-vector 166.0 -165.0 841.0) (float-vector 115.0 -165.0 824.0) (float-vector 115.0 165.0 824.0)))
         (instance face :init :vertices (list (float-vector 165.0 165.0 860.0) (float-vector 165.0 -165.0 860.0) (float-vector 166.0 -165.0 841.0) (float-vector 166.0 165.0 841.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -410.0 235.0 10.0) (float-vector -410.0 215.0 10.0) (float-vector -440.0 215.0 10.0) (float-vector -440.0 235.0 10.0)))
         (instance face :init :vertices (list (float-vector -120.0 155.0 860.0) (float-vector -120.0 175.0 860.0) (float-vector -150.0 175.0 860.0) (float-vector -150.0 155.0 860.0)))
         (instance face :init :vertices (list (float-vector -410.0 235.0 10.0) (float-vector -120.0 175.0 860.0) (float-vector -120.0 155.0 860.0) (float-vector -410.0 215.0 10.0)))
         (instance face :init :vertices (list (float-vector -440.0 235.0 10.0) (float-vector -150.0 175.0 860.0) (float-vector -120.0 175.0 860.0) (float-vector -410.0 235.0 10.0)))
         (instance face :init :vertices (list (float-vector -440.0 215.0 10.0) (float-vector -150.0 155.0 860.0) (float-vector -150.0 175.0 860.0) (float-vector -440.0 235.0 10.0)))
         (instance face :init :vertices (list (float-vector -410.0 215.0 10.0) (float-vector -120.0 155.0 860.0) (float-vector -150.0 155.0 860.0) (float-vector -440.0 215.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -410.0 -215.0 10.0) (float-vector -410.0 -235.0 10.0) (float-vector -440.0 -235.0 10.0) (float-vector -440.0 -215.0 10.0)))
         (instance face :init :vertices (list (float-vector -120.0 -175.0 860.0) (float-vector -120.0 -155.0 860.0) (float-vector -150.0 -155.0 860.0) (float-vector -150.0 -175.0 860.0)))
         (instance face :init :vertices (list (float-vector -410.0 -215.0 10.0) (float-vector -120.0 -155.0 860.0) (float-vector -120.0 -175.0 860.0) (float-vector -410.0 -235.0 10.0)))
         (instance face :init :vertices (list (float-vector -440.0 -215.0 10.0) (float-vector -150.0 -155.0 860.0) (float-vector -120.0 -155.0 860.0) (float-vector -410.0 -215.0 10.0)))
         (instance face :init :vertices (list (float-vector -440.0 -235.0 10.0) (float-vector -150.0 -175.0 860.0) (float-vector -150.0 -155.0 860.0) (float-vector -440.0 -215.0 10.0)))
         (instance face :init :vertices (list (float-vector -410.0 -235.0 10.0) (float-vector -120.0 -175.0 860.0) (float-vector -150.0 -175.0 860.0) (float-vector -440.0 -235.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -323.353 -210.0 220.0) (float-vector -383.353 -210.0 220.0) (float-vector -384.353 -210.0 201.0) (float-vector -333.353 -210.0 184.0)))
         (instance face :init :vertices (list (float-vector -383.353 210.0 220.0) (float-vector -323.353 210.0 220.0) (float-vector -333.353 210.0 184.0) (float-vector -384.353 210.0 201.0)))
         (instance face :init :vertices (list (float-vector -323.353 -210.0 220.0) (float-vector -323.353 210.0 220.0) (float-vector -383.353 210.0 220.0) (float-vector -383.353 -210.0 220.0)))
         (instance face :init :vertices (list (float-vector -333.353 -210.0 184.0) (float-vector -333.353 210.0 184.0) (float-vector -323.353 210.0 220.0) (float-vector -323.353 -210.0 220.0)))
         (instance face :init :vertices (list (float-vector -384.353 -210.0 201.0) (float-vector -384.353 210.0 201.0) (float-vector -333.353 210.0 184.0) (float-vector -333.353 -210.0 184.0)))
         (instance face :init :vertices (list (float-vector -383.353 -210.0 220.0) (float-vector -383.353 210.0 220.0) (float-vector -384.353 210.0 201.0) (float-vector -384.353 -210.0 201.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -251.706 -195.0 430.0) (float-vector -311.706 -195.0 430.0) (float-vector -312.706 -195.0 411.0) (float-vector -261.706 -195.0 394.0)))
         (instance face :init :vertices (list (float-vector -311.706 195.0 430.0) (float-vector -251.706 195.0 430.0) (float-vector -261.706 195.0 394.0) (float-vector -312.706 195.0 411.0)))
         (instance face :init :vertices (list (float-vector -251.706 -195.0 430.0) (float-vector -251.706 195.0 430.0) (float-vector -311.706 195.0 430.0) (float-vector -311.706 -195.0 430.0)))
         (instance face :init :vertices (list (float-vector -261.706 -195.0 394.0) (float-vector -261.706 195.0 394.0) (float-vector -251.706 195.0 430.0) (float-vector -251.706 -195.0 430.0)))
         (instance face :init :vertices (list (float-vector -312.706 -195.0 411.0) (float-vector -312.706 195.0 411.0) (float-vector -261.706 195.0 394.0) (float-vector -261.706 -195.0 394.0)))
         (instance face :init :vertices (list (float-vector -311.706 -195.0 430.0) (float-vector -311.706 195.0 430.0) (float-vector -312.706 195.0 411.0) (float-vector -312.706 -195.0 411.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -180.059 -180.0 640.0) (float-vector -240.059 -180.0 640.0) (float-vector -241.059 -180.0 621.0) (float-vector -190.059 -180.0 604.0)))
         (instance face :init :vertices (list (float-vector -240.059 180.0 640.0) (float-vector -180.059 180.0 640.0) (float-vector -190.059 180.0 604.0) (float-vector -241.059 180.0 621.0)))
         (instance face :init :vertices (list (float-vector -180.059 -180.0 640.0) (float-vector -180.059 180.0 640.0) (float-vector -240.059 180.0 640.0) (float-vector -240.059 -180.0 640.0)))
         (instance face :init :vertices (list (float-vector -190.059 -180.0 604.0) (float-vector -190.059 180.0 604.0) (float-vector -180.059 180.0 640.0) (float-vector -180.059 -180.0 640.0)))
         (instance face :init :vertices (list (float-vector -241.059 -180.0 621.0) (float-vector -241.059 180.0 621.0) (float-vector -190.059 180.0 604.0) (float-vector -190.059 -180.0 604.0)))
         (instance face :init :vertices (list (float-vector -240.059 -180.0 640.0) (float-vector -240.059 180.0 640.0) (float-vector -241.059 180.0 621.0) (float-vector -241.059 -180.0 621.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -105.0 -165.0 860.0) (float-vector -165.0 -165.0 860.0) (float-vector -166.0 -165.0 841.0) (float-vector -115.0 -165.0 824.0)))
         (instance face :init :vertices (list (float-vector -165.0 165.0 860.0) (float-vector -105.0 165.0 860.0) (float-vector -115.0 165.0 824.0) (float-vector -166.0 165.0 841.0)))
         (instance face :init :vertices (list (float-vector -105.0 -165.0 860.0) (float-vector -105.0 165.0 860.0) (float-vector -165.0 165.0 860.0) (float-vector -165.0 -165.0 860.0)))
         (instance face :init :vertices (list (float-vector -115.0 -165.0 824.0) (float-vector -115.0 165.0 824.0) (float-vector -105.0 165.0 860.0) (float-vector -105.0 -165.0 860.0)))
         (instance face :init :vertices (list (float-vector -166.0 -165.0 841.0) (float-vector -166.0 165.0 841.0) (float-vector -115.0 165.0 824.0) (float-vector -115.0 -165.0 824.0)))
         (instance face :init :vertices (list (float-vector -165.0 -165.0 860.0) (float-vector -165.0 165.0 860.0) (float-vector -166.0 165.0 841.0) (float-vector -166.0 -165.0 841.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :darkgray)
     (send (elt bc 1) :set-color :darkgray)
     (send (elt bc 2) :set-color :darkgray)
     (send (elt bc 3) :set-color :darkgray)
     (send (elt bc 4) :set-color :darkgray)
     (send (elt bc 5) :set-color :darkgray)
     (send (elt bc 6) :set-color :darkgray)
     (send (elt bc 7) :set-color :darkgray)
     (send (elt bc 8) :set-color :darkgray)
     (send (elt bc 9) :set-color :darkgray)
     (send (elt bc 10) :set-color :darkgray)
     (send (elt bc 11) :set-color :darkgray)
     (send (elt bc 12) :set-color :darkgray)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 14300 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))
  (:cameras (&rest args)
   (forward-message-to-all (list) args))

  (:handle (&rest args) (forward-message-to-all (list ) args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73b2-picaladder (&rest args) (instance* room73b2-picaladder-object :init args))
;; (format *error-output* "(instance room73b2-picaladder-object :init) for generating model~%")
